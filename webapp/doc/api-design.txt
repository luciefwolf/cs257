Written by Yuelin Kuang and Lucie Wolf
API design for the webapp project
Nov 6, 2022



REQUEST: /games


GET parameters
        title (optional) - return only games whose titles contain search_text, 
                case-insensitively

        min_age_above (optional) - return only games with a minimum age above min_age_below,
                inclusive
    
        min_age_below (optional) - return only games with a minimum age below min_age_below,
                inclusive

        price_above (optional) - return only games with a price above min_price, inclusive

        price_below (optional) - return only games with a price below min_price, inclusive

        start_date (optional) - return only games released after start_date, inclusive

        end_date (optional) - return only games released before end_date, inclusive

        developer_id (optional, default: any) - return only games developed by any of the 
                developers whose id is in the list developer, or any developers at all if 
                developers = any

        platforms (optional, default: [w, m, l]) - return only games available on at least 
                on of the platforms in the list platform

        genre_id (optional, default: any) - return only games in the genres of any of the 
                genres whose id is in the list genre, or any genre at all if 
                genres = any

        sort_by (optional, default: title_a) - return the list of games sorted by release 
                date or minimum age in ascending or descending order, or alphabetically by 
                title in ascending order by default
        
        percent_pos_ratings_above (optional) - return only games with a percentage of
                positive ratings above percent_pos_ratings_above, inclusive
        
        percent_pos_ratings_below (optional) - return only games with a percentage of
                positive ratings below percent_pos_ratings_above, inclusive
        
        total_ratings_above (optional) - return only games with at least total_ratings_above
                ratings, inclusive
        
        total_ratings_below (optional) - return only games with at most total_ratings_below
                ratings, inclusive


RESPONSE: a JSON list of dictionaries, each of which represents one game, sorted alphabetically 
        by game title by default, or by release date or minimum age upon request. Each 
        dictionary in this list will have the following fields.

        id - (TEXT) the id for the game as stored in our database

        title - (TEXT) the title of the game

        description - (TEXT) the description of the game

        header_image - (DICTIONARY) the dictionary of images, which field "header_image", 
                "background", and "screenshots", with "screenshots" as a list



EXAMPLE:
    /games?search_text=rag&platform=[windows]&developer=[“Mark Healey”]&sort_by=“minimum_age_a”

       [{"title": "Rag Doll Kung Fu", 
         "description": "Featuring a wide collection of single and multiplayer games, 
         either online or with multiple mice, Rag Doll Kung Fu provides players with 
         one of the most creative and unique game experiences delivered in years. 
         Additionally, between those game rounds, the challenges of an aspiring Kung 
         Fu master are revealed via outlandish cut scenes inspired by classic Kung Fu 
         cinema.", 
         "links_to_images": [“https://steamcdn-a.akamaihd.net/steam/apps/1002/header.jpg?t=1447350828”, 
         “'https://steamcdn-a.akamaihd.net/steam/apps/1002/0000000205.600x338.jpg?t=1447350828”, 
         “https://steamcdn-a.akamaihd.net/steam/apps/1002/page_bg_generated_v6b.jpg?t=1447350828”], 
         "developers": “Mark Healey”, “publisher”: “Mark Healey”, “release_date”: “2005/10/12”, 
         “minimum_age”: 0, “english_support”: True, “genres”: [“Indie”], “categories”: [“Single-player”, “Multi-player”], 
         “website”: “http://www.ragdollkungfu.com/”}]
       


REQUEST: /stats/developers


GET parameters
        developer (Optional, default: any) - return only games developed by any of the developers in 
                the list developer, or any developers at all if developers = any

        start_date (Optional, default: -infinity) - return only games released on or after start_date

        end_date (Optional, default: infinity) - return only games released on or before end_date

        genre (optional, default: any) - return only games in at least one of the specified genres in the list genre

        min_age_above (Optional, default: 0) - return only games with a minimum age above or equal to min_age_above
    
        min_age_below (Optional, default: 18) - return only games with a minimum age below or equal to min_age_below


RESPONSE: a JSON dictionary having the following fields. 

                graph_title - (TEXT) the title of graph

                link_to_graph - (TEXT) a link to the image that displays the graph


EXAMPLE:
    /stats/developers?genre=[“Action”, “Strategy”]&developer=[“Gearbox Software”, “Valve”]

       {“graph_title”: “Percentage of games developed by Gearbox Software and/or Valve in genres Action and/or Strategy”, 
       “link_to_graph”: “graph.png”}



REQUEST: /stats/release_dates


GET parameters
        developer (Optional, default: any) - return only games developed by any of the developers 
                in the list developer, or any developers at all if developers = any

        start_date (Optional, default: -infinity) - return only games released on or after start_date

        end_date (Optional, default: infinity) - return only games released on or before end_date

        genre (optional, default: any) - return only games in at least one of the specified genres in the list genre

        min_age_above (Optional, default: 0) - return only games with a minimum age above or equal to min_age_above
    
        min_age_below (Optional, default: 18) - return only games with a minimum age below or equal to min_age_below


RESPONSE: a JSON dictionary having the following fields.

                graph_title - (TEXT) the title of graph

                link_to_graph - (TEXT) a link to the image that displays the graph


EXAMPLE:
    /stats/release_dates?genre=[“Action”, “Strategy”]&start_date=2005-04-01&developer=[“Gearbox Software”, “Valve”]

       {“graph_title”: “Histogram of games developed by Gearbox Software and/or Valve after 2005-04-01 in genre(s) Action and/or Strategy”, 
       “link_to_graph”: “graph.png”}



REQUEST: /stats/genres


GET parameters
        developer (Optional, default: any) - return only games developed by any of the developers 
                in the list developer, or any developers at all if developers = any

        start_date (Optional, default: -infinity) - return only games released on or after start_date

        end_date (Optional, default: infinity) - return only games released on or before end_date

        genre (optional, default: any) - return only games in at least one of the specified genres in the list genre

        min_age_above (Optional, default: 0) - return only games with a minimum age above or equal to min_age_above
    
        min_age_below (Optional, default: 18) - return only games with a minimum age below or equal to min_age_below


RESPONSE: a JSON dictionary having the following fields. 

                graph_title - (TEXT) the title of graph

                link_to_graph - (TEXT) a link to the image that displays the graph


EXAMPLE:
    /stats/genres?genre=[“Action”, “Strategy”]&developer=[“Gearbox Software”, “Valve”]&start_date=2005-01-01&end_date=2010-01-01

       {“graph_title”: “Percentage of games in Action and/or Strategy developed by Gearbox Software and/or Valve between 2005-01-01 and 2010-01-01”, 
       “link_to_graph”: “graph.png”}
